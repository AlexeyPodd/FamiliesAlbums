version: "3"

services:
  nginx:
    restart: always
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot_data/conf:/etc/letsencrypt
      - ./certbot_data/www:/var/www/certbot
      - ./media:/var/www/media
      - ./static:/var/www/static
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot_data/conf:/etc/letsencrypt
      - ./certbot_data/www:/var/www/certbot
  django:
    build: .
    container_name: django
    command: gunicorn -w 3 photoalbums.wsgi --bind 0.0.0.0:8000
    volumes:
      - ./media:/usr/src/family_albums/media
      - ./static:/usr/src/family_albums/static
    ports:
      - "587:587"
    env_file: /usr/src/family_albums/.django-celery-env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
  celery:
    build: .
    container_name: celery
    command: sh ./celery_start_script
    volumes:
      - ./media:/usr/src/family_albums/media
    env_file: /usr/src/family_albums/.django-celery-env
    depends_on:
      - django
      - redis
      - mysql
    restart: always
  mysql:
    image: mysql
    container_name: mysql
    env_file: ./.mysql-env
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    restart: always
    volumes:
      - ./mysql_db:/var/lib/mysql
  redis:
    container_name: redis
    image: "redis:alpine"
    restart: always